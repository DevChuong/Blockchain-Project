package javaapplication3;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.security.KeyFactory;
import java.security.PublicKey;
import java.security.spec.X509EncodedKeySpec;
import java.util.Base64;

import javax.crypto.Cipher;

public class JavaApplication3 {
    public static void main(String args[]) throws Exception{
try {
			
			FileInputStream fis = new FileInputStream("D:/publicKey.rsa");
			byte[] b = new byte[fis.available()];
			fis.read(b);
			fis.close();

			
			X509EncodedKeySpec spec = new X509EncodedKeySpec(b);
			KeyFactory factory = KeyFactory.getInstance("RSA");
			PublicKey pubKey = factory.generatePublic(spec);

			// Encrypt data
			Cipher c = Cipher.getInstance("RSA");
			c.init(Cipher.ENCRYPT_MODE, pubKey);
                        
        File fin;
	      fin = new File("D:\\RPO_Info.txt");
        FileInputStream fis1 = null;
        String str = "";
        try {
            fis1 = new FileInputStream(fin);
            int content;
            while ((content = fis1.read()) != -1) {
                // convert to char and display it
                str += (char) content;
            }
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            try {
                if (fis1 != null)
                    fis1.close();
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }                        
      byte encryptOut[] = c.doFinal(str.getBytes()); 
			String strEncrypt = Base64.getEncoder().encodeToString(encryptOut);
			System.out.println("String result: " + strEncrypt);

		} catch (Exception ex) {
			ex.printStackTrace();
		}

    }
}
